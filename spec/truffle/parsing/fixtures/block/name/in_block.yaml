subject: "Block"
description: "Name / in a block"
notes: >
  A block name is "block in (<depth> levels) in <method name>":
  
    parseName = block (2 levels) in <top (required)>
focused_on_node: "org.truffleruby.language.methods.BlockDefinitionNode"
ruby: |
  proc do
    proc {}
  end
ast: |
  BlockDefinitionNodeGen
      attributes:
          breakID = org.truffleruby.language.control.BreakID@...
          callTargets = ProcCallTargets(callTargetForProc = block in <top (required)>, callTargetForLambda = null, altCallTargetCompiler = ...$$Lambda$.../0x...@...)
          flags = 0
          frameOnStackMarkerSlot = 2
          sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <top (required)>, blockDepth = 1, parseName = block in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
          sourceCharIndex = 5
          sourceLength = 16
          type = PROC
      call targets:
          RubyProcRootNode
              attributes:
                  callTarget = block in <top (required)>
                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:%frame_on_stack_marker_1}
                  instrumentationBits = 0
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  nextProfile = false
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  redoProfile = false
                  retryProfile = false
                  returnID = org.truffleruby.language.control.ReturnID@...
                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <top (required)>, blockDepth = 1, parseName = block in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
                  sourceSection = SourceSection(source=<parse_ast> [1:6 - 3:3], index=5, length=16, characters=do\n  proc {}\nend)
                  split = HEURISTIC
              children:
                  body =
                      SequenceNode
                          attributes:
                              flags = 12
                              sourceCharIndex = 5
                              sourceLength = 16
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 0 # (self)
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                                              attributes:
                                                                  flags = 0
                                                                  sourceCharIndex = -1
                                                                  sourceLength = 0
                                  CatchBreakNode
                                      attributes:
                                          breakID = org.truffleruby.language.control.BreakID@...
                                          flags = 1
                                          isWhile = false
                                          sourceCharIndex = 10
                                          sourceLength = 7
                                      children:
                                          body =
                                              FrameOnStackNode
                                                  attributes:
                                                      flags = 0
                                                      frameOnStackMarkerSlot = 1
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      child =
                                                          RubyCallNode
                                                              attributes:
                                                                  descriptor = NoKeywordArgumentsDescriptor
                                                                  dispatchConfig = PRIVATE
                                                                  emptyKeywordsProfile = false
                                                                  flags = 0
                                                                  isAttrAssign = false
                                                                  isSafeNavigation = false
                                                                  isSplatted = false
                                                                  isVCall = false
                                                                  lastArgIsNotHashProfile = false
                                                                  methodName = "proc"
                                                                  notEmptyKeywordsProfile = false
                                                                  notRuby2KeywordsHashProfile = false
                                                                  sourceCharIndex = -1
                                                                  sourceLength = 0
                                                              children:
                                                                  block =
                                                                      BlockDefinitionNodeGen
                                                                          attributes:
                                                                              breakID = org.truffleruby.language.control.BreakID@...
                                                                              callTargets = ProcCallTargets(callTargetForProc = block (2 levels) in <top (required)>, callTargetForLambda = null, altCallTargetCompiler = ...$$Lambda$.../0x...@...)
                                                                              flags = 0
                                                                              frameOnStackMarkerSlot = 1
                                                                              sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block (2 levels) in <top (required)>, blockDepth = 2, parseName = block (2 levels) in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
                                                                              sourceCharIndex = 15
                                                                              sourceLength = 2
                                                                              type = PROC
                                                                          call targets:
                                                                              RubyProcRootNode
                                                                                  attributes:
                                                                                      callTarget = block (2 levels) in <top (required)>
                                                                                      frameDescriptor = FrameDescriptor@...{#0:(self)}
                                                                                      instrumentationBits = 0
                                                                                      lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                                                                                      nextProfile = false
                                                                                      polyglotRef = org.truffleruby.RubyLanguage@...
                                                                                      redoProfile = false
                                                                                      retryProfile = false
                                                                                      returnID = org.truffleruby.language.control.ReturnID@...
                                                                                      sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block (2 levels) in <top (required)>, blockDepth = 2, parseName = block (2 levels) in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
                                                                                      sourceSection = SourceSection(source=<parse_ast> [2:8 - 2:9], index=15, length=2, characters={})
                                                                                      split = HEURISTIC
                                                                                  children:
                                                                                      body =
                                                                                          SequenceNode
                                                                                              attributes:
                                                                                                  flags = 12
                                                                                                  sourceCharIndex = 15
                                                                                                  sourceLength = 2
                                                                                              children:
                                                                                                  body = [
                                                                                                      WriteLocalVariableNode
                                                                                                          attributes:
                                                                                                              flags = 0
                                                                                                              frameSlot = 0 # (self)
                                                                                                              sourceCharIndex = -1
                                                                                                              sourceLength = 0
                                                                                                          children:
                                                                                                              valueNode =
                                                                                                                  ProfileArgumentNodeGen
                                                                                                                      attributes:
                                                                                                                          flags = 0
                                                                                                                          sourceCharIndex = -1
                                                                                                                          sourceLength = 0
                                                                                                                      children:
                                                                                                                          childNode_ =
                                                                                                                              ReadSelfNode
                                                                                                                                  attributes:
                                                                                                                                      flags = 0
                                                                                                                                      sourceCharIndex = -1
                                                                                                                                      sourceLength = 0
                                                                                                      NilLiteralNode
                                                                                                          attributes:
                                                                                                              flags = 0
                                                                                                              sourceCharIndex = -1
                                                                                                              sourceLength = 0
                                                                                                  ]
                                                                  receiver =
                                                                      SelfNode
                                                                          attributes:
                                                                              flags = 0
                                                                              sourceCharIndex = -1
                                                                              sourceLength = 0
                              ]