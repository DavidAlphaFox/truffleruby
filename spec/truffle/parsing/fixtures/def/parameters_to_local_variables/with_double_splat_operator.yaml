subject: "Def"
description: "Parameters to local variables / with double splat operator (**kw)"
notes: >
  Rest keyword argument is assigned a local variable with the following simplified AST: 
  
    (WriteLocalVariableNode
      (ReadKeywordRestArgumentNode
        (ReadUserKeywordsHashNode)))
  
  Note that ReadKeywordRestArgumentNode has attribute `excludedKeywords = [:a, :b]`
  with listed required keyword arguments.

focused_on_node: "org.truffleruby.language.methods.LiteralMethodDefinitionNode"
ruby: |
  def foo(a:, b:, **other)
  end
ast: |
  LiteralMethodDefinitionNode
      attributes:
          callTargetSupplier = org.truffleruby.language.methods.CachedLazyCallTargetSupplier@...
          flags = 1
          isDefSingleton = false
          name = "foo"
          sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [a, b], requiredKeywordArgumentsCount = 2, hasKeywordsRest = true}, originName = foo, blockDepth = 0, parseName = Object#foo, notes = null, argumentDescriptors = [ArgumentDescriptor(name = a, type = keyreq), ArgumentDescriptor(name = b, type = keyreq), ArgumentDescriptor(name = other, type = keyrest)])
          sourceCharIndex = 0
          sourceLength = 28
      call targets:
          RubyMethodRootNode
              attributes:
                  arityForCheck = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [a, b], requiredKeywordArgumentsCount = 2, hasKeywordsRest = true}
                  callTarget = Object#foo
                  checkArityProfile = false
                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_, #2:a, #3:b, #4:other, #5:%method_block_arg}
                  instrumentationBits = 0
                  keywordArguments = true
                  localReturnProfile = false
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  matchingReturnProfile = false
                  nonMatchingReturnProfile = false
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  retryProfile = false
                  returnID = org.truffleruby.language.control.ReturnID@...
                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [a, b], requiredKeywordArgumentsCount = 2, hasKeywordsRest = true}, originName = foo, blockDepth = 0, parseName = Object#foo, notes = null, argumentDescriptors = [ArgumentDescriptor(name = a, type = keyreq), ArgumentDescriptor(name = b, type = keyreq), ArgumentDescriptor(name = other, type = keyrest)])
                  split = HEURISTIC
              children:
                  body =
                      SequenceNode
                          attributes:
                              flags = 12
                              sourceCharIndex = 0
                              sourceLength = 28
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 0 # (self)
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                                              attributes:
                                                                  flags = 0
                                                                  sourceCharIndex = -1
                                                                  sourceLength = 0
                                  SaveMethodBlockNode
                                      attributes:
                                          flags = 0
                                          slot = 5
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 2 # a
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ReadKeywordArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                      name = :a
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      readUserKeywordsHashNode =
                                                          ReadUserKeywordsHashNode
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 3 # b
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ReadKeywordArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                      name = :b
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      readUserKeywordsHashNode =
                                                          ReadUserKeywordsHashNode
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 4 # other
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ReadKeywordRestArgumentNode
                                                  attributes:
                                                      excludedKeywords = [:a, :b]
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      hashes =
                                                          HashStoreLibraryGen$CachedDispatchFirst
                                                              attributes:
                                                                  limit_ = 3
                                                      readUserKeywordsHashNode =
                                                          ReadUserKeywordsHashNode
                                  NilLiteralNode
                                      attributes:
                                          flags = 0
                                          sourceCharIndex = -1
                                          sourceLength = 0
                              ]