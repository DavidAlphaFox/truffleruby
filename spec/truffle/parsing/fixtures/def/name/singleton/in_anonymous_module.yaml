subject: "Def"
description: "Name / Singleton / in an anonymous module"
notes: >
  Method name is prefixed with "<singleton class>#":
  
    parseName = <singleton class>#foo
focused_on_node: "org.truffleruby.language.methods.BlockDefinitionNode"
ruby: |
  Module.new do
    bar = "bar"
    def bar.foo
    end
  end
ast: |
  BlockDefinitionNodeGen
      attributes:
          breakID = org.truffleruby.language.control.BreakID@...
          callTargets = ProcCallTargets(callTargetForProc = block in <top (required)>, callTargetForLambda = null, altCallTargetCompiler = ...$$Lambda$.../0x...@...)
          flags = 0
          frameOnStackMarkerSlot = 2
          sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <top (required)>, blockDepth = 1, parseName = block in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
          sourceCharIndex = 11
          sourceLength = 40
          type = PROC
      call targets:
          RubyProcRootNode
              attributes:
                  callTarget = block in <top (required)>
                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:bar}
                  instrumentationBits = 0
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  nextProfile = false
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  redoProfile = false
                  retryProfile = false
                  returnID = org.truffleruby.language.control.ReturnID@...
                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <top (required)>, blockDepth = 1, parseName = block in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
                  split = HEURISTIC
              children:
                  body =
                      SequenceNode
                          attributes:
                              flags = 12
                              sourceCharIndex = 11
                              sourceLength = 40
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 0 # (self)
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                                              attributes:
                                                                  flags = 0
                                                                  sourceCharIndex = -1
                                                                  sourceLength = 0
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 1
                                          frameSlot = 1 # bar
                                          sourceCharIndex = 16
                                          sourceLength = 11
                                      children:
                                          valueNode =
                                              StringLiteralNode
                                                  attributes:
                                                      encoding = UTF-8
                                                      flags = 0
                                                      sourceCharIndex = 22
                                                      sourceLength = 5
                                                      tstring = bar
                                  LiteralMethodDefinitionNode
                                      attributes:
                                          callTargetSupplier = org.truffleruby.language.methods.CachedLazyCallTargetSupplier@...
                                          flags = 1
                                          isDefSingleton = true
                                          name = "foo"
                                          sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = foo, blockDepth = 0, parseName = <singleton class>#foo, notes = null, argumentDescriptors = [])
                                          sourceCharIndex = 30
                                          sourceLength = 17
                                      children:
                                          moduleNode =
                                              SingletonClassNodeGen$SingletonClassASTNodeGen
                                                  attributes:
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      valueNode_ =
                                                          ReadLocalVariableNode
                                                              attributes:
                                                                  flags = 0
                                                                  frameSlot = 1 # bar
                                                                  sourceCharIndex = 34
                                                                  sourceLength = 3
                                                                  type = FRAME_LOCAL
                                      call targets:
                                          RubyMethodRootNode
                                              attributes:
                                                  arityForCheck = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}
                                                  callTarget = <singleton class>#foo
                                                  checkArityProfile = false
                                                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_, #2:%method_block_arg}
                                                  instrumentationBits = 0
                                                  keywordArguments = false
                                                  localReturnProfile = false
                                                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                                                  matchingReturnProfile = false
                                                  nonMatchingReturnProfile = false
                                                  polyglotRef = org.truffleruby.RubyLanguage@...
                                                  retryProfile = false
                                                  returnID = org.truffleruby.language.control.ReturnID@...
                                                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = foo, blockDepth = 0, parseName = <singleton class>#foo, notes = null, argumentDescriptors = [])
                                                  split = HEURISTIC
                                              children:
                                                  body =
                                                      SequenceNode
                                                          attributes:
                                                              flags = 12
                                                              sourceCharIndex = 30
                                                              sourceLength = 17
                                                          children:
                                                              body = [
                                                                  WriteLocalVariableNode
                                                                      attributes:
                                                                          flags = 0
                                                                          frameSlot = 0 # (self)
                                                                          sourceCharIndex = -1
                                                                          sourceLength = 0
                                                                      children:
                                                                          valueNode =
                                                                              ProfileArgumentNodeGen
                                                                                  attributes:
                                                                                      flags = 0
                                                                                      sourceCharIndex = -1
                                                                                      sourceLength = 0
                                                                                  children:
                                                                                      childNode_ =
                                                                                          ReadSelfNode
                                                                                              attributes:
                                                                                                  flags = 0
                                                                                                  sourceCharIndex = -1
                                                                                                  sourceLength = 0
                                                                  SaveMethodBlockNode
                                                                      attributes:
                                                                          flags = 0
                                                                          slot = 2
                                                                          sourceCharIndex = -1
                                                                          sourceLength = 0
                                                                  NilLiteralNode
                                                                      attributes:
                                                                          flags = 0
                                                                          sourceCharIndex = -1
                                                                          sourceLength = 0
                                                              ]
                              ]