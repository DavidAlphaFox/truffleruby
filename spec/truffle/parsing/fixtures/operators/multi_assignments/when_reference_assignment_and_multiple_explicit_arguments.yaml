subject: "Multi-assignment"
description: "When there is an element reference and multiple explicit arguments on the LHS (a[:foo, :bar], b = foo )"
notes: >
  Attribute assignment is represented as a method call `v.foo=(nil)`
focused_on_node: "org.truffleruby.core.array.MultipleAssignmentNode"
ruby: |
  a[:key, 0], b = 'foo', 'bar', 'baz'
ast: |
  MultipleAssignmentNode
      attributes:
          flags = 1
          sourceCharIndex = 0
          sourceLength = 35
      children:
          preNodes = [
              RubyCallNode
                  attributes:
                      descriptor = NoKeywordArgumentsDescriptor
                      dispatchConfig = PROTECTED
                      emptyKeywordsProfile = false
                      flags = 0
                      isAttrAssign = true
                      isSafeNavigation = false
                      isSplatted = false
                      isVCall = false
                      lastArgIsNotHashProfile = false
                      methodName = "[]="
                      notEmptyKeywordsProfile = false
                      notRuby2KeywordsHashProfile = false
                      sourceCharIndex = 0
                      sourceLength = 10
                  children:
                      arguments = [
                          ObjectLiteralNode
                              attributes:
                                  flags = 0
                                  object = :key
                                  sourceCharIndex = 2
                                  sourceLength = 4
                          IntegerFixnumLiteralNode
                              attributes:
                                  flags = 0
                                  sourceCharIndex = 8
                                  sourceLength = 1
                                  value = 0
                          NilLiteralNode
                              attributes:
                                  flags = 0
                                  sourceCharIndex = 0
                                  sourceLength = 0
                      ]
                      receiver =
                          RubyCallNode
                              attributes:
                                  descriptor = NoKeywordArgumentsDescriptor
                                  dispatchConfig = PRIVATE
                                  emptyKeywordsProfile = false
                                  flags = 0
                                  isAttrAssign = false
                                  isSafeNavigation = false
                                  isSplatted = false
                                  isVCall = true
                                  lastArgIsNotHashProfile = false
                                  methodName = "a"
                                  notEmptyKeywordsProfile = false
                                  notRuby2KeywordsHashProfile = false
                                  sourceCharIndex = 0
                                  sourceLength = 1
                              children:
                                  receiver =
                                      SelfNode
                                          attributes:
                                              flags = 0
                                              sourceCharIndex = -1
                                              sourceLength = 0
              WriteFrameSlotNodeGen
                  attributes:
                      frameSlot = 2 # b
          ]
          rhsNode =
              ArrayLiteralNode$UninitialisedArrayLiteralNode
                  attributes:
                      flags = 0
                      language = org.truffleruby.RubyLanguage@...
                      sourceCharIndex = 16
                      sourceLength = 19
                  children:
                      values = [
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  sourceCharIndex = 16
                                  sourceLength = 5
                                  tstring = foo
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  sourceCharIndex = 23
                                  sourceLength = 5
                                  tstring = bar
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  sourceCharIndex = 30
                                  sourceLength = 5
                                  tstring = baz
                      ]
          splatCastNode =
              SplatCastNodeGen
                  attributes:
                      conversionMethod = :to_ary
                      copy = true
                      flags = 0
                      nilBehavior = ARRAY_WITH_NIL
                      sourceCharIndex = -1
                      sourceLength = 0