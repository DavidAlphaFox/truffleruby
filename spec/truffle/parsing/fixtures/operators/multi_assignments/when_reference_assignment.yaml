subject: "Multi-assignment"
description: "When there is an element reference on the LHS (a[:key], b = foo )"
notes: >
  Attribute assignment is represented as a method call `v.foo=(nil)`
focused_on_node: "org.truffleruby.core.array.MultipleAssignmentNode"
ruby: |
  a[:key], b = 'foo', 'bar', 'baz'
ast: |
  MultipleAssignmentNode
      attributes:
          flags = 0
          sourceCharIndex = -1
          sourceLength = 0
      children:
          preNodes = [
              InlinedIndexSetNodeGen
                  attributes:
                      assumptions = [Assumption(valid, name=set_trace_func is not used)]
                      flags = 0
                      parameters = RubyCallNodeParameters{methodName='[]=', descriptor=NoKeywordArgumentsDescriptor, isSplatted=false, ignoreVisibility=false, isVCall=false, isSafeNavigation=false, isAttrAssign=true}
                      sourceCharIndex = 0
                      sourceLength = 7
                  children:
                      operand1Node_ =
                          ReadLocalVariableNode
                              attributes:
                                  flags = 0
                                  frameSlot = 4 # %argument_1
                                  sourceCharIndex = 2
                                  sourceLength = 4
                                  type = FRAME_LOCAL
                      operand2Node_ =
                          NilLiteralNode
                              attributes:
                                  flags = 0
                                  sourceCharIndex = -1
                                  sourceLength = 0
                      receiver_ =
                          ReadLocalVariableNode
                              attributes:
                                  flags = 0
                                  frameSlot = 3 # %receiver_0
                                  sourceCharIndex = 0
                                  sourceLength = 1
                                  type = FRAME_LOCAL
              WriteFrameSlotNodeGen
                  attributes:
                      frameSlot = 2 # b
          ]
          rhsNode =
              ArrayLiteralNode$UninitialisedArrayLiteralNode
                  attributes:
                      flags = 0
                      language = org.truffleruby.RubyLanguage@...
                      sourceCharIndex = 13
                      sourceLength = 19
                  children:
                      values = [
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  sourceCharIndex = 13
                                  sourceLength = 5
                                  tstring = foo
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  sourceCharIndex = 20
                                  sourceLength = 5
                                  tstring = bar
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  sourceCharIndex = 27
                                  sourceLength = 5
                                  tstring = baz
                      ]
          splatCastNode =
              SplatCastNodeGen
                  attributes:
                      conversionMethod = :to_ary
                      copy = true
                      flags = 0
                      nilBehavior = ARRAY_WITH_NIL
                      sourceCharIndex = -1
                      sourceLength = 0