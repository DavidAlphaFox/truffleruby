subject: "Multi-assignment"
description: "When nested multi assignment / element reference (a[:key], b = foo)"
notes: >
focused_on_node: "org.truffleruby.core.array.MultipleAssignmentNode"
ruby: |
  (a[:key], b), c = []
ast: |
  MultipleAssignmentNode
      attributes:
          flags = 0
          sourceCharIndex = -1
          sourceLength = 0
      children:
          preNodes = [
              MultipleAssignmentNode
                  attributes:
                      flags = 0
                      sourceCharIndex = -1
                      sourceLength = 0
                  children:
                      preNodes = [
                          InlinedIndexSetNodeGen
                              attributes:
                                  assumptions = [Assumption(valid, name=set_trace_func is not used)]
                                  flags = 0
                                  parameters = RubyCallNodeParameters{methodName='[]=', descriptor=NoKeywordArgumentsDescriptor, isSplatted=false, ignoreVisibility=false, isVCall=false, isSafeNavigation=false, isAttrAssign=true}
                                  sourceCharIndex = 1
                                  sourceLength = 7
                              children:
                                  operand1Node_ =
                                      ReadLocalVariableNode
                                          attributes:
                                              flags = 0
                                              frameSlot = 5 # %argument_1
                                              sourceCharIndex = 3
                                              sourceLength = 4
                                              type = FRAME_LOCAL
                                  operand2Node_ =
                                      NilLiteralNode
                                          attributes:
                                              flags = 0
                                              sourceCharIndex = -1
                                              sourceLength = 0
                                  receiver_ =
                                      ReadLocalVariableNode
                                          attributes:
                                              flags = 0
                                              frameSlot = 4 # %receiver_0
                                              sourceCharIndex = 1
                                              sourceLength = 1
                                              type = FRAME_LOCAL
                          WriteFrameSlotNodeGen
                              attributes:
                                  frameSlot = 2 # b
                      ]
                      splatCastNode =
                          SplatCastNodeGen
                              attributes:
                                  conversionMethod = :to_ary
                                  copy = true
                                  flags = 0
                                  nilBehavior = ARRAY_WITH_NIL
                                  sourceCharIndex = -1
                                  sourceLength = 0
              WriteFrameSlotNodeGen
                  attributes:
                      frameSlot = 3 # c
          ]
          rhsNode =
              ArrayLiteralNode$UninitialisedArrayLiteralNode
                  attributes:
                      flags = 0
                      language = org.truffleruby.RubyLanguage@...
                      sourceCharIndex = 18
                      sourceLength = 2
          splatCastNode =
              SplatCastNodeGen
                  attributes:
                      conversionMethod = :to_ary
                      copy = true
                      flags = 0
                      nilBehavior = ARRAY_WITH_NIL
                      sourceCharIndex = -1
                      sourceLength = 0