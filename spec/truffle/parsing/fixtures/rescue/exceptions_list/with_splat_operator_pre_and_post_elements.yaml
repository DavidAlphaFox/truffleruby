subject: "Rescue keyword"
description: "exceptions list / with a splat operator, followed and preceded by list elements"
notes: >
  The rescue branch is represented as multiple independent rescue branches
  with the same body.
  
  The simplified AST is the following:
  
    (TryNode
      (RescueClassesNode
        (ReadConstantWithLexicalScopeNode name = FOO)
        (IntegerFixnumLiteralNode value = 42))
    
      (RescueSplatNode
        (IntegerFixnumLiteralNode value = 42)
        (SplatCastNodeGen
          (ReadConstantWithLexicalScopeNode name = EXCEPTIONS_ARRAY)))
    
      (RescueClassesNode
        (ReadConstantWithLexicalScopeNode name = BAR)
        (IntegerFixnumLiteralNode value = 42))
    
      (StringLiteralNode tstring = foo))
  
  So it's equivalent to the following Ruby code:
  
  ```ruby
  begin
    "foo"
  rescue FOO
    42
  rescue *EXCEPTIONS_ARRAY
    42
  rescue BAR
    42
  end
  ```

focused_on_node: "org.truffleruby.language.exceptions.TryNode"
ruby: |
  begin
    "foo"
  rescue FOO, *EXCEPTIONS_ARRAY, BAR
    42
  end
ast: |
  TryNodeGen
      attributes:
          flags = 0
          sourceCharIndex = 0
          sourceLength = 57
      children:
          rescueParts = [
              RescueClassesNode
                  attributes:
                      canOmitBacktrace = true
                      flags = 0
                      sourceCharIndex = 21
                      sourceLength = 3
                  children:
                      handlingClassNodes = [
                          ReadConstantWithLexicalScopeNode
                              attributes:
                                  flags = 0
                                  lexicalScope =  :: Object
                                  name = "FOO"
                                  sourceCharIndex = 21
                                  sourceLength = 3
                              children:
                                  getConstantNode =
                                      GetConstantNodeGen
                                  lookupConstantNode =
                                      LookupConstantWithLexicalScopeNodeGen
                                          attributes:
                                              lexicalScope =  :: Object
                                              name = "FOO"
                      ]
                      rescueBody =
                          IntegerFixnumLiteralNode
                              attributes:
                                  flags = 1
                                  sourceCharIndex = 51
                                  sourceLength = 2
                                  value = 42
              RescueSplatNode
                  attributes:
                      canOmitBacktrace = true
                      flags = 0
                      sourceCharIndex = 26
                      sourceLength = 17
                  children:
                      rescueBody =
                          IntegerFixnumLiteralNode
                              attributes:
                                  flags = 1
                                  sourceCharIndex = 51
                                  sourceLength = 2
                                  value = 42
                      splatCastNode =
                          SplatCastNodeGen
                              attributes:
                                  conversionMethod = :to_a
                                  copy = false
                                  flags = 0
                                  nilBehavior = EMPTY_ARRAY
                                  sourceCharIndex = -1
                                  sourceLength = 0
                              children:
                                  childNode_ =
                                      ReadConstantWithLexicalScopeNode
                                          attributes:
                                              flags = 0
                                              lexicalScope =  :: Object
                                              name = "EXCEPTIONS_ARRAY"
                                              sourceCharIndex = 27
                                              sourceLength = 16
                                          children:
                                              getConstantNode =
                                                  GetConstantNodeGen
                                              lookupConstantNode =
                                                  LookupConstantWithLexicalScopeNodeGen
                                                      attributes:
                                                          lexicalScope =  :: Object
                                                          name = "EXCEPTIONS_ARRAY"
                      stores =
                          ArrayStoreLibraryGen$CachedDispatchFirst
                              attributes:
                                  limit_ = 4
              RescueClassesNode
                  attributes:
                      canOmitBacktrace = true
                      flags = 0
                      sourceCharIndex = 45
                      sourceLength = 3
                  children:
                      handlingClassNodes = [
                          ReadConstantWithLexicalScopeNode
                              attributes:
                                  flags = 0
                                  lexicalScope =  :: Object
                                  name = "BAR"
                                  sourceCharIndex = 45
                                  sourceLength = 3
                              children:
                                  getConstantNode =
                                      GetConstantNodeGen
                                  lookupConstantNode =
                                      LookupConstantWithLexicalScopeNodeGen
                                          attributes:
                                              lexicalScope =  :: Object
                                              name = "BAR"
                      ]
                      rescueBody =
                          IntegerFixnumLiteralNode
                              attributes:
                                  flags = 1
                                  sourceCharIndex = 51
                                  sourceLength = 2
                                  value = 42
          ]
          tryPart =
              StringLiteralNode
                  attributes:
                      encoding = UTF-8
                      flags = 1
                      sourceCharIndex = 8
                      sourceLength = 5
                      tstring = foo