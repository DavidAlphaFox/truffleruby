subject: "case expression"
description: "without expression to match / with multiple values in a `when` branch (case when a, b ... end)"
notes: >
  A list of conditions in a `when` expression is represented as a single `if` operator
  to evaluate each of conditions.
  
  So the example below is translated to the following expression:
  
    if true || false
      "1st or 2d condition"
    else
      nil
    end
focused_on_node: "org.truffleruby.language.control.IfElseNode"
ruby: |
  case
  when true, false
    "1st or 2d condition"
  end
ast: |
  IfElseNodeGen
      attributes:
          flags = 1
          sourceCharIndex = 0
          sourceLength = 49
      children:
          condition =
              OrNodeGen
                  attributes:
                      flags = 0
                      sourceCharIndex = -1
                      sourceLength = 0
                  children:
                      left =
                          BooleanLiteralNode
                              attributes:
                                  flags = 0
                                  sourceCharIndex = 10
                                  sourceLength = 4
                                  value = true
                      right =
                          BooleanLiteralNode
                              attributes:
                                  flags = 0
                                  sourceCharIndex = 16
                                  sourceLength = 5
                                  value = false
          elseBody =
              NilLiteralNode
                  attributes:
                      flags = 0
                      sourceCharIndex = -1
                      sourceLength = 0
          thenBody =
              StringLiteralNode
                  attributes:
                      encoding = UTF-8
                      flags = 1
                      sourceCharIndex = 24
                      sourceLength = 21
                      tstring = 1st or 2d condition