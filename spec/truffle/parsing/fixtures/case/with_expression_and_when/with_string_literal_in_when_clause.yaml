subject: "case expression"
description: "with expression to match / and String literal in when clause (case exp when 'string' ... end)"
notes: >
  String becomes frozen and is represented as FrozenStringLiteralNode
focused_on_node: "org.truffleruby.language.control.IfElseNode"
ruby: |
  case 42
  when "foo"
    true
  end
ast: |
  IfElseNodeGen
      attributes:
          flags = 0
          sourceCharIndex = -1
          sourceLength = 0
      children:
          condition =
              InlinedCaseEqualNodeGen
                  attributes:
                      assumptions = [Assumption(valid, name=set_trace_func is not used)]
                      flags = 0
                      integerCaseEqualAssumption = Assumption(valid, name=inlined Integer#===)
                      parameters = RubyCallNodeParameters{methodName='===', descriptor=NoKeywordArgumentsDescriptor, isSplatted=false, ignoreVisibility=true, isVCall=false, isSafeNavigation=false, isAttrAssign=false}
                      sourceCharIndex = -1
                      sourceLength = 0
                  children:
                      leftNode_ =
                          FrozenStringLiteralNode
                              attributes:
                                  definition = expression
                                  flags = 0
                                  frozenString = foo
                                  sourceCharIndex = 13
                                  sourceLength = 5
                      rightNode_ =
                          ReadLocalVariableNode
                              attributes:
                                  flags = 0
                                  frameSlot = 2 # %case_0
                                  sourceCharIndex = -1
                                  sourceLength = 0
                                  type = FRAME_LOCAL
          elseBody =
              NilLiteralNode
                  attributes:
                      flags = 0
                      sourceCharIndex = -1
                      sourceLength = 0
          thenBody =
              BooleanLiteralNode
                  attributes:
                      flags = 1
                      sourceCharIndex = 21
                      sourceLength = 4
                      value = true