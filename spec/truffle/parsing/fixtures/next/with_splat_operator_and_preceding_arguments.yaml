subject: "Next"
description: "with splat operator and preceding arguments (next a, ..., *b)"
notes: >
  Arguments are represented with combination of:
  - ArrayConcatNode
  - SplatCastNodeGen
  - ArrayLiteralNode$UninitialisedArrayLiteralNode
  nodes
focused_on_node: "org.truffleruby.language.control.NextNode"
ruby: |
  while (true)
    next 42, 100500, *foo
  end
ast: |
  NextNode
      attributes:
          flags = 1
          sourceCharIndex = 15
          sourceLength = 21
      children:
          child =
              ArrayConcatNode
                  attributes:
                      flags = 0
                      sourceCharIndex = 20
                      sourceLength = 16
                  children:
                      children = [
                          ArrayLiteralNode$UninitialisedArrayLiteralNode
                              attributes:
                                  flags = 0
                                  language = org.truffleruby.RubyLanguage@...
                                  sourceCharIndex = -1
                                  sourceLength = 0
                              children:
                                  values = [
                                      IntegerFixnumLiteralNode
                                          attributes:
                                              flags = 0
                                              sourceCharIndex = 20
                                              sourceLength = 2
                                              value = 42
                                      IntegerFixnumLiteralNode
                                          attributes:
                                              flags = 0
                                              sourceCharIndex = 24
                                              sourceLength = 6
                                              value = 100500
                                  ]
                          SplatCastNodeGen
                              attributes:
                                  conversionMethod = :to_a
                                  copy = true
                                  flags = 0
                                  nilBehavior = CONVERT
                                  sourceCharIndex = 32
                                  sourceLength = 4
                              children:
                                  childNode_ =
                                      RubyCallNode
                                          attributes:
                                              descriptor = NoKeywordArgumentsDescriptor
                                              dispatchConfig = PRIVATE
                                              emptyKeywordsProfile = false
                                              flags = 0
                                              isAttrAssign = false
                                              isSafeNavigation = false
                                              isSplatted = false
                                              isVCall = true
                                              lastArgIsNotHashProfile = false
                                              methodName = "foo"
                                              notEmptyKeywordsProfile = false
                                              notRuby2KeywordsHashProfile = false
                                              sourceCharIndex = 33
                                              sourceLength = 3
                                          children:
                                              receiver =
                                                  SelfNode
                                                      attributes:
                                                          flags = 0
                                                          sourceCharIndex = -1
                                                          sourceLength = 0
                      ]