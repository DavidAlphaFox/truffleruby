subject: "Local variable"
description: "in a module / assigning local variable leads to its declaration"
notes: >
  Declaration is represented by a RubyRootNode's attribute frameDescriptor:
    frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_, #2:foo}
focused_on_node: "org.truffleruby.language.objects.RunModuleDefinitionNode"
ruby: |
  module M
    foo = 42
  end
ast: |
  RunModuleDefinitionNode
      attributes:
          flags = 1
          moduleBodyDefinition = ModuleBodyDefinition(name = <module:M>, sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: null :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = <module:M>, blockDepth = 0, parseName = <module:M>, notes = null, argumentDescriptors = null), callTarget = <module:M>, staticLexicalScope =  :: null :: Object, dynamicLexicalScopes = null)
          sourceCharIndex = 0
          sourceLength = 23
      children:
          callModuleDefinitionNode =
              DefaultIndirectCallNode
          definingModule =
              DefineModuleNodeGen
                  attributes:
                      flags = 0
                      name = "M"
                      sourceCharIndex = 0
                      sourceLength = 23
                  children:
                      lexicalParentModuleNode_ =
                          LexicalScopeNode
                              attributes:
                                  flags = 0
                                  lexicalScope =  :: Object
                                  sourceCharIndex = -1
                                  sourceLength = 0
      call targets:
          RubyRootNode
              attributes:
                  callTarget = <module:M>
                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_, #2:foo}
                  instrumentationBits = 0
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  returnID = MODULE_BODY
                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: null :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = <module:M>, blockDepth = 0, parseName = <module:M>, notes = null, argumentDescriptors = null)
                  split = NEVER
              children:
                  body =
                      SequenceNode
                          attributes:
                              flags = 12
                              sourceCharIndex = 0
                              sourceLength = 23
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 0 # (self)
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                                              attributes:
                                                                  flags = 0
                                                                  sourceCharIndex = -1
                                                                  sourceLength = 0
                                  InsideModuleDefinitionNode
                                      attributes:
                                          flags = 0
                                          sourceCharIndex = 0
                                          sourceLength = 23
                                      children:
                                          body =
                                              WriteLocalVariableNode
                                                  attributes:
                                                      flags = 1
                                                      frameSlot = 2 # foo
                                                      sourceCharIndex = 11
                                                      sourceLength = 8
                                                  children:
                                                      valueNode =
                                                          IntegerFixnumLiteralNode
                                                              attributes:
                                                                  flags = 0
                                                                  sourceCharIndex = 17
                                                                  sourceLength = 2
                                                                  value = 42
                              ]