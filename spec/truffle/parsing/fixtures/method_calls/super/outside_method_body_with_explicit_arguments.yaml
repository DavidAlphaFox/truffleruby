subject: "Method call"
description: super / outside a method body with explicit arguments
notes: >
  Is represented by SuperCallNode and ReadSuperArgumentsNode nodes
focused_on_node: "org.truffleruby.language.methods.BlockDefinitionNode"
ruby: |
  -> { super(42) }
ast: |
  BlockDefinitionNodeGen
      attributes:
          breakID = org.truffleruby.language.control.BreakID@...
          callTargets = ProcCallTargets(callTargetForProc = null, callTargetForLambda = block in <top (required)>, altCallTargetCompiler = null)
          flags = 1
          frameOnStackMarkerSlot = -1
          sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <top (required)>, blockDepth = 1, parseName = block in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
          sourceCharIndex = 0
          sourceLength = 16
          type = LAMBDA
      call targets:
          RubyLambdaRootNode
              attributes:
                  arityForCheck = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}
                  breakID = org.truffleruby.language.control.BreakID@...
                  callTarget = block in <top (required)>
                  checkArityProfile = false
                  frameDescriptor = FrameDescriptor@...{#0:(self)}
                  instrumentationBits = 0
                  keywordArguments = false
                  localReturnProfile = false
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  matchingBreakProfile = false
                  matchingReturnProfile = false
                  nextProfile = false
                  nonMatchingBreakProfile = false
                  nonMatchingReturnProfile = false
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  redoProfile = false
                  retryProfile = false
                  returnID = org.truffleruby.language.control.ReturnID@...
                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <top (required)>, blockDepth = 1, parseName = block in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
                  sourceSection = SourceSection(source=<parse_ast> [1:1 - 1:16], index=0, length=16, characters=-> { super(42) })
                  split = HEURISTIC
              children:
                  body =
                      SequenceNode
                          attributes:
                              flags = 12
                              sourceCharIndex = 0
                              sourceLength = 16
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 0 # (self)
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                                              attributes:
                                                                  flags = 0
                                                                  sourceCharIndex = -1
                                                                  sourceLength = 0
                                  SuperCallNode
                                      attributes:
                                          descriptor = NoKeywordArgumentsDescriptor
                                          emptyKeywordsProfile = false
                                          flags = 1
                                          isSplatted = false
                                          lastArgIsNotHashProfile = false
                                          notEmptyKeywordsProfile = false
                                          notRuby2KeywordsHashProfile = false
                                          sourceCharIndex = 5
                                          sourceLength = 9
                                      children:
                                          arguments =
                                              ReadSuperArgumentsNode
                                                  attributes:
                                                      flags = 0
                                                      isSplatted = false
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      arguments = [
                                                          IntegerFixnumLiteralNode
                                                              attributes:
                                                                  flags = 0
                                                                  sourceCharIndex = 11
                                                                  sourceLength = 2
                                                                  value = 42
                                                      ]
                                          block =
                                              NilLiteralNode
                                                  attributes:
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                              ]